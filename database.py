import pandas as pd
import pymysql
import datetime #오늘날짜 

dt_now = datetime.datetime.now()
dt_now = dt_now.date() #날짜만
    
########################################## DB 연결 #################################
# MySQL Connection 연결
con = pymysql.connect(host='localhost', user='root', password='root',
                      db='mysql', charset='utf8')  # 한글처리 (charset = 'utf8')

# Connection 으로부터 Cursor 생성
cursor = con.cursor()

########################################## DB 생성하기 ########################################
sql = ["CREATE DATABASE  IF NOT EXISTS `cafeteria_db`", "USE `cafeteria_db`;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) #데이터베이스 보여주기

########################################## 식단 테이블  생성, 데이터 추가 ########################################

sql = ["DROP TABLE IF EXISTS `cafeteria`;", "CREATE TABLE `cafeteria` (  `menu_num` int(11) NOT NULL AUTO_INCREMENT,  `date` date NOT NULL,  `main_menu` varchar(30) NOT NULL,  `menu1` varchar(20) NOT NULL,  `menu2` varchar(20) NOT NULL,  `menu3` varchar(20) NOT NULL,  `menu4` varchar(20) NOT NULL,  `menu5` varchar(20) NOT NULL,  `menu_price` int NOT NULL,  `menu_qty` int NOT NULL, PRIMARY KEY (`menu_num`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;", "LOCK TABLES `cafeteria` WRITE;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 

sql = ["INSERT INTO `cafeteria` VALUES (1,'2022-11-01','뚝배기사골떡만둣국','쌀밥','훈제오리겨자냉채','감자채피망볶음','얼갈이겉절이','알새우칩',7000,30),(2,'2022-11-01','미트토마토파스타','옥수수크림스프','갈릭또띠아피자','비트무피클','배추김치','알새우칩',7000,30),(3,'2022-11-02','오삼불고기','잡곡밥','미역국','모둠쌈&쌈장','볼어묵볶음','카레소스',7000,30),(4,'2022-11-02','철판함박&펜네청양초까르보소스','팽이장국','쌀밥','두부카프레제샐러드','단무지','카레소스',7000,30),(5,'2022-11-03','순살찜닭&당면사리','귀리팥밥','콩가루배추국','두부조림','돌나물겉절이','메밀차',7000,30),(6,'2022-11-03','철판김치치즈볶음밥','미니우동','모닝빵반미샌드위치','오이피클','열무김치','메밀차',7000,30),(7,'2022-11-04','돈육김치찌개&당면사리','쌀밥','계란말이&케첩','도토리묵산채무침','무나물','바나나브륄레',7000,30),(8,'2022-11-04','돈코츠라멘','쌀밥','모둠크로켓&케찹','락교무침','깍두기','바나나브륄레',7000,30),(9,'2022-11-07','철판제육김치볶음&두부찜','잡곡밥','얼무된장국','볼어묵피망볶음','깍두기','단호박죽',7000,30),(10,'2022-11-07','얼큰바지락칼제비','쌀밥','왕만두찜&초간장','무말랭이무침','수제배추겉절이','단호박죽',7000,30),(11,'2022-11-08','닭곰탕','쌀밥','김치전','치커리겉절이','깍두기','알새우칩',7000,30),(12,'2022-11-08','갈릭볶음밥&데미소스','쌀국수육수','생선까스&타르소스','무말랭이무침','배추김치','알새우칩',7000,30),(13,'2022-11-09','김치스팸덮밥','가쓰오부시장국','알감자버터구이','간장마늘종장아찌','깍두기','매실차',7000,30),(14,'2022-11-09','짬뽕수제비','쌀밥','만두탕수','오복채무침','단무지','매실차',7000,30),(15,'2022-11-10','뚝배기소불고기&당면사리','쌀밥','미역국','매콤어묵채파프리카볶음','양배추속쌈','통영꿀빵',7000,30),(16,'2022-11-10','철판닭갈비김치볶음밥','미니잔치국수','계란말이','고추장아찌','깍두기','통영꿀빵',7000,30),(17,'2022-11-11','뚝배기사골떡만둣국','쌀밥','훈제오리겨자냉채','감자채피망볶음','얼갈이겉절이','알새우칩',7000,30),(18,'2022-11-11','미트토마토파스타','옥수수크림스프','갈릭또띠아피자','비트무피클','배추김치','알새우칩',7000,30),(19,'2022-11-14','오삼불고기','잡곡밥','미역국','모둠쌈&쌈장','볼어묵볶음','카레소스',7000,30),(20,'2022-11-14','철판함박&펜네청양초까르보소스','팽이장국','쌀밥','두부카프레제샐러드','단무지','카레소스',7000,30),(21,'2022-11-15','순살찜닭&당면사리','귀리팥밥','콩가루배추국','두부조림','돌나물겉절이','메밀차',7000,30),(22,'2022-11-15','철판김치치즈볶음밥','미니우동','모닝빵반미샌드위치','오이피클','열무김치','메밀차',7000,30),(23,'2022-11-16','돈육김치찌개&당면사리','쌀밥','계란말이&케첩','도토리묵산채무침','무나물','바나나브륄레',7000,30),(24,'2022-11-16','돈코츠라멘','쌀밥','모둠크로켓&케찹','락교무침','깍두기','바나나브륄레',7000,30),(25,'2022-11-17','철판제육김치볶음&두부찜','잡곡밥','얼무된장국','볼어묵피망볶음','깍두기','단호박죽',7000,30),(26,'2022-11-17','얼큰바지락칼제비','쌀밥','왕만두찜&초간장','무말랭이무침','수제배추겉절이','단호박죽',7000,30),(27,'2022-11-18','닭곰탕','쌀밥','김치전','치커리겉절이','깍두기','알새우칩',7000,30),(28,'2022-11-18','갈릭볶음밥&데미소스','쌀국수육수','생선까스&타르소스','무말랭이무침','배추김치','알새우칩',7000,30),(29,'2022-11-21','김치스팸덮밥','가쓰오부시장국','알감자버터구이','간장마늘종장아찌','깍두기','매실차',7000,30),(30,'2022-11-21','짬뽕수제비','쌀밥','만두탕수','오복채무침','단무지','매실차',7000,30),(31,'2022-11-22','뚝배기소불고기&당면사리','쌀밥','미역국','매콤어묵채파프리카볶음','양배추속쌈','통영꿀빵',7000,30),(32,'2022-11-22','철판닭갈비김치볶음밥','미니잔치국수','계란말이','고추장아찌','깍두기','통영꿀빵',7000,30),(33,'2022-11-23','뚝배기사골떡만둣국','쌀밥','훈제오리겨자냉채','감자채피망볶음','얼갈이겉절이','알새우칩',7000,30),(34,'2022-11-23','미트토마토파스타','옥수수크림스프','갈릭또띠아피자','비트무피클','배추김치','알새우칩',7000,30),(35,'2022-11-24','오삼불고기','잡곡밥','미역국','모둠쌈&쌈장','볼어묵볶음','카레소스',7000,30),(36,'2022-11-24','철판함박&펜네청양초까르보소스','팽이장국','쌀밥','두부카프레제샐러드','단무지','카레소스',7000,30),(37,'2022-11-25','순살찜닭&당면사리','귀리팥밥','콩가루배추국','두부조림','돌나물겉절이','메밀차',7000,30),(38,'2022-11-25','철판김치치즈볶음밥','미니우동','모닝빵반미샌드위치','오이피클','열무김치','메밀차',7000,30),(39,'2022-11-28','돈육김치찌개&당면사리','쌀밥','계란말이&케첩','도토리묵산채무침','무나물','바나나브륄레',7000,30),(40,'2022-11-28','돈코츠라멘','쌀밥','모둠크로켓&케찹','락교무침','깍두기','바나나브륄레',7000,30),(41,'2022-11-29','철판제육김치볶음&두부찜','잡곡밥','얼무된장국','볼어묵피망볶음','깍두기','단호박죽',7000,30),(42,'2022-11-29','얼큰바지락칼제비','쌀밥','왕만두찜&초간장','무말랭이무침','수제배추겉절이','단호박죽',7000,30),(43,'2022-11-30','닭곰탕','쌀밥','김치전','치커리겉절이','깍두기','알새우칩',7000,30),(44,'2022-11-30','갈릭볶음밥&데미소스','쌀국수육수','생선까스&타르소스','무말랭이무침','배추김치','알새우칩',7000,30),(45,'2022-12-01','철판제육김치볶음&두부찜','잡곡밥','얼무된장국','볼어묵피망볶음','깍두기','단호박죽',7000,30),(46,'2022-12-01','얼큰바지락칼제비','쌀밥','왕만두찜&초간장','무말랭이무침','수제배추겉절이','단호박죽',7000,30),(47,'2022-12-02','독육무표고밥&양념장','얼큰콩나물국','고등어구이&레몬와사비장','곤약피망잡채','치커리겉절이','바나나브륄레',7000,30),(48,'2022-12-02','카레라이스&치킨까스','유부장국','양배추샐러드','락교무침','배추김치','바나나브륄레',7000,30),(49,'2022-12-03','오므라이스','새우까스','당근백김치','김치','봉골레파스타','된장국',7000,30),(50,'2022-12-03','매운탕','잡곡밥&쌀밥','소시지무침','계란말이','오이김치','김',7000,30),(51,'2022-12-05','설렁탕&소면사리','쌀밥','호박채매생이전&양파간장','멸치볶음','깍두기','모둠채소스틱&쌈장',7000,30),(52,'2022-12-05','얼큰해물짬뽕','쌀밥','레몬마요크림새우','반달단무지','배추김치','모둠채소스틱&쌈장',7000,30),(53,'2022-12-06','치즈부대찌개&라면사리','쌀밥','꽈리고추계란조림','알감자조림','깍두기','알새우칩',7000,30),(54,'2022-12-06','직화에비가츠동','미니우동','모둠크로켓&케찹','흑임자죽','배추김치','알새우칩',7000,30),(55,'2022-12-07','철판제육김치볶음&두부찜','잡곡밥','얼무된장국','볼어묵피망볶음','깍두기','단호박죽',7000,30),(56,'2022-12-07','얼큰바지락칼제비','쌀밥','왕만두찜&초간장','무말랭이무침','수제배추겉절이','단호박죽',7000,30);", "UNLOCK TABLES;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 
    
########################################## 회원 table 생성, 데이터 추가 ########################################

sql = ["DROP TABLE IF EXISTS `employee`;", "CREATE TABLE `employee` (  `employee_num` int NOT NULL,  `employee_name` varchar(10) NOT NULL,  `department` varchar(15) NOT NULL,  PRIMARY KEY (`employee_num`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;", "LOCK TABLES `employee` WRITE;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 

sql = ["INSERT INTO `employee` VALUES (6240001,'김가연','경영기획'),(6240002,'환승희','경영기획'),(6240003,'이여울','경영기획'),(6240004,'홍길동','경영기획'),(6240005,'김민영','경영기획'),(6240006,'이수민','경영기획'),(6240007,'고민지','재무'),(6240008,'이아름','재무'),(6240009,'한민주','재무'),(6240010,'황민수','재무'),(6240011,'서지연','재무'),(6240012,'이정재','재무'),(6240013,'한다혜','마케팅'),(6240014,'홍지민','마케팅'),(6240015,'최애라','마케팅'),(6240016,'채민주','마케팅'),(6240017,'권다솔','마케팅'),(6240018,'이유정','마케팅'),(6240019,'권민희','IT'),(6240020,'오재민','IT'),(6240021,'이소영','IT'),(6240022,'김혜림','IT'),(6240023,'고사랑','IT'),(6240024,'추민지','IT'),(6240025,'김민석','IT'),(6240026,'정동환','IT'),(6240027,'조규현','IT'),(6240028,'이동해','IT'),(6240029,'차은우','IT'),(6240030,'신동엽','IT'),(6240031,'부승관','IT'),(6240032,'안유진','IT'),(6240033,'문영빈','영업'),(6240034,'서은광','영업'),(6240035,'육성재','영업'),(6240036,'유연석','영업'),(6240037,'강하늘','영업'),(6240038,'이진호','영업'),(6240039,'채수빈','영업'),(6240040,'하지원','영업'),(6240041,'차예련','영업'),(6240042,'주상욱','영업'),(6240043,'소이현','디지털플렛폼'),(6240044,'인교진','디지털플렛폼'),(6240045,'오상진','디지털플렛폼'),(6240046,'이소영','디지털플렛폼'),(6240047,'김강민','디지털플렛폼'),(6240048,'최광현','디지털플렛폼'),(6240049,'김선민','디지털플렛폼'),(6240050,'김성민','디지털플렛폼');", "UNLOCK TABLES;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 
      
########################################## 주문 테이블 생성하기 ########################################

sql = ["DROP TABLE IF EXISTS `order_menu`;", "CREATE TABLE `order_menu` (  `order_num` int(11) NOT NULL AUTO_INCREMENT,  `date` date NOT NULL,  `employee_num` int NOT NULL,  `menu_num` varchar(20) NOT NULL,  PRIMARY KEY (`order_num`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;", "LOCK TABLES `order_menu` WRITE;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 

sql = ["INSERT INTO `order_menu` VALUES (1,'2022-11-01',6240001,1),(2,'2022-11-01',6240002,2),(3,'2022-11-01',6240003,1),(4,'2022-11-01',6240005,2),(5,'2022-11-01',6240007,1),(6,'2022-11-01',6240008,2),(7,'2022-11-01',6240009,1),(8,'2022-11-01',6240010,2),(9,'2022-11-01',6240012,1),(10,'2022-11-01',6240013,2),(11,'2022-11-01',6240014,1),(12,'2022-11-01',6240016,2),(13,'2022-11-01',6240017,1),(14,'2022-11-01',6240019,2),(15,'2022-11-01',6240020,1),(16,'2022-11-01',6240021,1),(17,'2022-11-01',6240022,1),(18,'2022-11-01',6240023,2),(19,'2022-11-01',6240025,1),(20,'2022-11-01',6240026,1),(21,'2022-11-01',6240027,2),(22,'2022-11-01',6240029,1),(23,'2022-11-01',6240030,2),(24,'2022-11-01',6240031,1),(25,'2022-11-01',6240032,2),(26,'2022-11-01',6240033,1),(27,'2022-11-01',6240035,2),(28,'2022-11-01',6240036,1),(29,'2022-11-01',6240037,2),(30,'2022-11-01',6240038,1),(31,'2022-11-01',6240041,2),(32,'2022-11-01',6240042,1),(33,'2022-11-01',6240044,2),(34,'2022-11-01',6240045,2),(35,'2022-11-01',6240046,2),(36,'2022-11-01',6240047,1),(37,'2022-11-01',6240048,2),(38,'2022-11-01',6240049,1),(39,'2022-11-01',6240050,2),(40,'2022-11-02',6240001,3),(41,'2022-11-02',6240002,4),(42,'2022-11-02',6240003,3),(43,'2022-11-02',6240004,4),(44,'2022-11-02',6240005,3),(45,'2022-11-02',6240007,4),(46,'2022-11-02',6240008,3),(47,'2022-11-02',6240009,4),(48,'2022-11-02',6240011,3),(49,'2022-11-02',6240012,4),(50,'2022-11-02',6240013,3),(51,'2022-11-02',6240014,4),(52,'2022-11-02',6240015,3),(53,'2022-11-02',6240016,4),(54,'2022-11-02',6240017,3),(55,'2022-11-02',6240019,4),(56,'2022-11-02',6240020,3),(57,'2022-11-02',6240022,4),(58,'2022-11-02',6240023,3),(59,'2022-11-02',6240024,4),(60,'2022-11-02',6240025,3),(61,'2022-11-02',6240026,4),(62,'2022-11-02',6240028,3),(63,'2022-11-02',6240029,4),(64,'2022-11-02',6240030,3),(65,'2022-11-02',6240031,4),(66,'2022-11-02',6240032,3),(67,'2022-11-02',6240033,4),(68,'2022-11-02',6240035,3),(69,'2022-11-02',6240036,4),(70,'2022-11-02',6240037,3),(71,'2022-11-02',6240038,4),(72,'2022-11-02',6240039,3),(73,'2022-11-02',6240040,4),(74,'2022-11-02',6240041,3),(75,'2022-11-02',6240042,4),(76,'2022-11-02',6240043,3),(77,'2022-11-02',6240044,4),(78,'2022-11-02',6240045,3),(79,'2022-11-02',6240047,4),(80,'2022-11-02',6240048,3),(81,'2022-11-03',6240001,5),(82,'2022-11-03',6240002,6),(83,'2022-11-03',6240003,5),(84,'2022-11-03',6240004,6),(85,'2022-11-03',6240005,5),(86,'2022-11-03',6240006,6),(87,'2022-11-03',6240007,5),(88,'2022-11-03',6240008,6),(89,'2022-11-03',6240009,5),(90,'2022-11-03',6240010,6),(91,'2022-11-03',6240012,5),(92,'2022-11-03',6240013,6),(93,'2022-11-03',6240014,5),(94,'2022-11-03',6240015,6),(95,'2022-11-03',6240016,5),(96,'2022-11-03',6240017,6),(97,'2022-11-03',6240018,5),(98,'2022-11-03',6240019,6),(99,'2022-11-03',6240021,5),(100,'2022-11-03',6240022,6),(101,'2022-11-03',6240023,5),(102,'2022-11-03',6240024,6),(103,'2022-11-03',6240025,5),(104,'2022-11-03',6240026,6),(105,'2022-11-03',6240027,5),(106,'2022-11-03',6240029,6),(107,'2022-11-03',6240031,5),(108,'2022-11-03',6240032,6),(109,'2022-11-03',6240033,5),(110,'2022-11-03',6240034,6),(111,'2022-11-03',6240035,5),(112,'2022-11-03',6240036,6),(113,'2022-11-03',6240038,5),(114,'2022-11-03',6240039,6),(115,'2022-11-03',6240040,5),(116,'2022-11-03',6240041,6),(117,'2022-11-03',6240042,5),(118,'2022-11-03',6240044,6),(119,'2022-11-03',6240045,5),(120,'2022-11-03',6240046,6),(121,'2022-11-03',6240047,5),(122,'2022-11-03',6240048,6),(123,'2022-11-03',6240049,5),(124,'2022-11-03',6240050,6),(125,'2022-11-04',6240001,7),(126,'2022-11-04',6240002,8),(127,'2022-11-04',6240003,7),(128,'2022-11-04',6240005,8),(129,'2022-11-04',6240007,7),(130,'2022-11-04',6240008,8),(131,'2022-11-04',6240009,7),(132,'2022-11-04',6240010,8),(133,'2022-11-04',6240012,7),(134,'2022-11-04',6240013,8),(135,'2022-11-04',6240014,7),(136,'2022-11-04',6240016,8),(137,'2022-11-04',6240017,7),(138,'2022-11-04',6240019,8),(139,'2022-11-04',6240020,7),(140,'2022-11-04',6240021,8),(141,'2022-11-04',6240022,7),(142,'2022-11-04',6240023,8),(143,'2022-11-04',6240025,7),(144,'2022-11-04',6240026,8),(145,'2022-11-04',6240027,7),(146,'2022-11-04',6240029,8),(147,'2022-11-04',6240030,7),(148,'2022-11-04',6240031,8),(149,'2022-11-04',6240032,7),(150,'2022-11-04',6240033,8),(151,'2022-11-04',6240035,7),(152,'2022-11-04',6240036,8),(153,'2022-11-04',6240037,7),(154,'2022-11-04',6240038,8),(155,'2022-11-04',6240041,7),(156,'2022-11-04',6240042,8),(157,'2022-11-04',6240044,7),(158,'2022-11-04',6240045,8),(159,'2022-11-04',6240046,7),(160,'2022-11-04',6240047,8),(161,'2022-11-04',6240048,7),(162,'2022-11-04',6240049,8),(163,'2022-11-04',6240050,7),(164,'2022-11-04',6240001,8),(165,'2022-11-07',6240002,9),(166,'2022-11-07',6240003,10),(167,'2022-11-07',6240004,9),(168,'2022-11-07',6240005,10),(169,'2022-11-07',6240007,9),(170,'2022-11-07',6240008,10),(171,'2022-11-07',6240009,9),(172,'2022-11-07',6240011,10),(173,'2022-11-07',6240012,9),(174,'2022-11-07',6240013,10),(175,'2022-11-07',6240014,9),(176,'2022-11-07',6240015,10),(177,'2022-11-07',6240016,9),(178,'2022-11-07',6240017,10),(179,'2022-11-07',6240019,9),(180,'2022-11-07',6240020,10),(181,'2022-11-07',6240022,9),(182,'2022-11-07',6240023,10),(183,'2022-11-07',6240024,9),(184,'2022-11-07',6240025,10),(185,'2022-11-08',6240026,11),(186,'2022-11-08',6240028,12),(187,'2022-11-08',6240029,11),(188,'2022-11-08',6240030,12),(189,'2022-11-08',6240031,11),(190,'2022-11-08',6240032,12),(191,'2022-11-08',6240033,11),(192,'2022-11-08',6240035,12),(193,'2022-11-08',6240036,11),(194,'2022-11-08',6240037,12),(195,'2022-11-08',6240038,11),(196,'2022-11-08',6240039,12),(197,'2022-11-08',6240040,11),(198,'2022-11-08',6240041,12),(199,'2022-11-08',6240042,11),(200,'2022-11-08',6240043,12),(201,'2022-11-08',6240044,11),(202,'2022-11-08',6240045,12),(203,'2022-11-08',6240047,11),(204,'2022-11-08',6240048,12),(205,'2022-11-08',6240001,11),(206,'2022-11-08',6240002,12),(207,'2022-11-08',6240003,11),(208,'2022-11-08',6240004,12),(209,'2022-11-08',6240005,11),(210,'2022-11-08',6240006,12),(211,'2022-11-08',6240007,11),(212,'2022-11-08',6240008,12),(213,'2022-11-08',6240009,11),(214,'2022-11-08',6240010,12),(215,'2022-11-08',6240012,11),(216,'2022-11-08',6240013,12),(217,'2022-11-08',6240014,11),(218,'2022-11-08',6240015,12),(219,'2022-11-08',6240016,11),(220,'2022-11-09',6240017,13),(221,'2022-11-09',6240018,14),(222,'2022-11-09',6240019,13),(223,'2022-11-09',6240021,14),(224,'2022-11-09',6240022,13),(225,'2022-11-09',6240023,14),(226,'2022-11-09',6240024,13),(227,'2022-11-09',6240025,14),(228,'2022-11-09',6240026,13),(229,'2022-11-09',6240027,14),(230,'2022-11-09',6240029,13),(231,'2022-11-09',6240031,14),(232,'2022-11-09',6240032,13),(233,'2022-11-09',6240033,14),(234,'2022-11-09',6240034,13),(235,'2022-11-09',6240035,14),(236,'2022-11-09',6240036,13),(237,'2022-11-09',6240038,14),(238,'2022-11-09',6240039,13),(239,'2022-11-09',6240040,14),(240,'2022-11-09',6240041,13),(241,'2022-11-09',6240042,14),(242,'2022-11-09',6240044,13),(243,'2022-11-09',6240045,14),(244,'2022-11-09',6240046,13),(245,'2022-11-09',6240047,14),(246,'2022-11-09',6240048,13),(247,'2022-11-09',6240049,14),(248,'2022-11-09',6240050,13),(249,'2022-11-10',6240001,15),(250,'2022-11-10',6240002,16),(251,'2022-11-10',6240003,15),(252,'2022-11-10',6240005,16),(253,'2022-11-10',6240007,15),(254,'2022-11-10',6240008,16),(255,'2022-11-10',6240009,15),(256,'2022-11-10',6240010,16),(257,'2022-11-10',6240012,15),(258,'2022-11-10',6240013,16),(259,'2022-11-10',6240014,15),(260,'2022-11-10',6240016,16),(261,'2022-11-10',6240017,15),(262,'2022-11-10',6240019,16),(263,'2022-11-10',6240020,15),(264,'2022-11-10',6240021,16),(265,'2022-11-10',6240022,15),(266,'2022-11-10',6240023,16),(267,'2022-11-10',6240025,15),(268,'2022-11-10',6240026,16),(269,'2022-11-10',6240027,15),(270,'2022-11-10',6240029,16),(271,'2022-11-10',6240030,15),(272,'2022-11-10',6240031,16),(273,'2022-11-10',6240032,15),(274,'2022-11-10',6240033,16),(275,'2022-11-10',6240035,15),(276,'2022-11-10',6240036,16),(277,'2022-11-11',6240037,17),(278,'2022-11-11',6240038,18),(279,'2022-11-11',6240041,17),(280,'2022-11-11',6240042,18),(281,'2022-11-11',6240044,17),(282,'2022-11-11',6240045,18),(283,'2022-11-11',6240046,17),(284,'2022-11-11',6240047,18),(285,'2022-11-11',6240048,17),(286,'2022-11-11',6240049,18),(287,'2022-11-11',6240050,17),(288,'2022-11-11',6240001,18),(289,'2022-11-11',6240002,17),(290,'2022-11-11',6240003,18),(291,'2022-11-11',6240004,17),(292,'2022-11-11',6240005,18),(293,'2022-11-11',6240007,17),(294,'2022-11-11',6240008,18),(295,'2022-11-11',6240009,17),(296,'2022-11-11',6240011,18),(297,'2022-11-11',6240012,17),(298,'2022-11-11',6240013,18),(299,'2022-11-11',6240014,17),(300,'2022-11-11',6240015,18),(301,'2022-11-11',6240016,17),(302,'2022-11-11',6240017,18),(303,'2022-11-11',6240019,17),(304,'2022-11-14',6240020,19),(305,'2022-11-14',6240022,20),(306,'2022-11-14',6240023,19),(307,'2022-11-14',6240024,20),(308,'2022-11-14',6240025,19),(309,'2022-11-14',6240026,20),(310,'2022-11-14',6240028,19),(311,'2022-11-14',6240029,20),(312,'2022-11-14',6240030,19),(313,'2022-11-14',6240031,20),(314,'2022-11-14',6240032,19),(315,'2022-11-14',6240033,20),(316,'2022-11-14',6240035,19),(317,'2022-11-14',6240036,20),(318,'2022-11-14',6240037,19),(319,'2022-11-14',6240038,20),(320,'2022-11-14',6240039,19),(321,'2022-11-14',6240040,20),(322,'2022-11-14',6240041,19),(323,'2022-11-14',6240042,20),(324,'2022-11-14',6240043,19),(325,'2022-11-14',6240044,20),(326,'2022-11-14',6240045,19),(327,'2022-11-14',6240047,20),(328,'2022-11-14',6240048,19),(329,'2022-11-14',6240001,20),(330,'2022-11-14',6240002,19),(331,'2022-11-14',6240003,20),(332,'2022-11-14',6240004,19),(333,'2022-11-14',6240005,20),(334,'2022-11-14',6240006,19),(335,'2022-11-14',6240007,20),(336,'2022-11-14',6240008,19),(337,'2022-11-14',6240009,20),(338,'2022-11-15',6240010,21),(339,'2022-11-15',6240012,22),(340,'2022-11-15',6240013,21),(341,'2022-11-15',6240014,22),(342,'2022-11-15',6240015,21),(343,'2022-11-15',6240016,22),(344,'2022-11-15',6240017,21),(345,'2022-11-15',6240018,22),(346,'2022-11-15',6240019,21),(347,'2022-11-15',6240021,22),(348,'2022-11-15',6240022,21),(349,'2022-11-15',6240023,22),(350,'2022-11-15',6240024,21),(351,'2022-11-15',6240025,22),(352,'2022-11-15',6240026,21),(353,'2022-11-15',6240027,22),(354,'2022-11-15',6240029,21),(355,'2022-11-15',6240031,22),(356,'2022-11-15',6240032,21),(357,'2022-11-15',6240033,22),(358,'2022-11-15',6240034,21),(359,'2022-11-15',6240035,22),(360,'2022-11-15',6240036,21),(361,'2022-11-15',6240038,22),(362,'2022-11-15',6240039,21),(363,'2022-11-15',6240040,22),(364,'2022-11-15',6240041,21),(365,'2022-11-15',6240042,22),(366,'2022-11-15',6240044,21),(367,'2022-11-15',6240045,22),(368,'2022-11-15',6240046,21),(369,'2022-11-15',6240047,22),(370,'2022-11-15',6240048,21),(371,'2022-11-15',6240049,22),(372,'2022-11-15',6240050,21),(373,'2022-11-16',6240001,23),(374,'2022-11-16',6240002,24),(375,'2022-11-16',6240003,23),(376,'2022-11-16',6240005,24),(377,'2022-11-16',6240007,23),(378,'2022-11-16',6240008,24),(379,'2022-11-16',6240009,23),(380,'2022-11-16',6240010,24),(381,'2022-11-16',6240012,23),(382,'2022-11-16',6240013,24),(383,'2022-11-16',6240014,23),(384,'2022-11-16',6240016,24),(385,'2022-11-16',6240017,23),(386,'2022-11-16',6240019,24),(387,'2022-11-16',6240020,23),(388,'2022-11-16',6240021,24),(389,'2022-11-16',6240022,23),(390,'2022-11-16',6240023,24),(391,'2022-11-16',6240025,23),(392,'2022-11-16',6240026,24),(393,'2022-11-16',6240027,23),(394,'2022-11-16',6240029,24),(395,'2022-11-16',6240030,23),(396,'2022-11-16',6240031,24),(397,'2022-11-16',6240032,23),(398,'2022-11-16',6240033,24),(399,'2022-11-16',6240035,23),(400,'2022-11-16',6240036,24),(401,'2022-11-16',6240037,23),(402,'2022-11-16',6240038,24),(403,'2022-11-16',6240041,23),(404,'2022-11-16',6240042,24),(405,'2022-11-16',6240044,23),(406,'2022-11-16',6240045,24),(407,'2022-11-17',6240046,25),(408,'2022-11-17',6240047,26),(409,'2022-11-17',6240048,25),(410,'2022-11-17',6240049,26),(411,'2022-11-17',6240050,25),(412,'2022-11-17',6240001,26),(413,'2022-11-17',6240002,25),(414,'2022-11-17',6240003,26),(415,'2022-11-17',6240004,25),(416,'2022-11-17',6240005,26),(417,'2022-11-17',6240007,25),(418,'2022-11-17',6240008,26),(419,'2022-11-17',6240009,25),(420,'2022-11-17',6240011,26),(421,'2022-11-17',6240012,25),(422,'2022-11-17',6240013,26),(423,'2022-11-17',6240014,25),(424,'2022-11-17',6240015,26),(425,'2022-11-17',6240016,25),(426,'2022-11-17',6240017,26),(427,'2022-11-17',6240019,25),(428,'2022-11-17',6240020,26),(429,'2022-11-17',6240022,25),(430,'2022-11-17',6240023,26),(431,'2022-11-17',6240024,25),(432,'2022-11-17',6240025,26),(433,'2022-11-17',6240026,25),(434,'2022-11-17',6240028,26),(435,'2022-11-17',6240029,25),(436,'2022-11-17',6240030,26),(437,'2022-11-17',6240031,25),(438,'2022-11-18',6240032,27),(439,'2022-11-18',6240033,28),(440,'2022-11-18',6240035,27),(441,'2022-11-18',6240036,28),(442,'2022-11-18',6240037,27),(443,'2022-11-18',6240038,28),(444,'2022-11-18',6240039,27),(445,'2022-11-18',6240040,28),(446,'2022-11-18',6240041,27),(447,'2022-11-18',6240042,28),(448,'2022-11-18',6240043,27),(449,'2022-11-18',6240044,28),(450,'2022-11-18',6240045,27),(451,'2022-11-18',6240047,28),(452,'2022-11-18',6240048,27),(453,'2022-11-18',6240001,28),(454,'2022-11-18',6240002,27),(455,'2022-11-18',6240003,28),(456,'2022-11-18',6240004,27),(457,'2022-11-18',6240005,28),(458,'2022-11-18',6240006,27),(459,'2022-11-18',6240007,28),(460,'2022-11-18',6240008,27),(461,'2022-11-18',6240009,28),(462,'2022-11-18',6240010,27),(463,'2022-11-18',6240012,28),(464,'2022-11-18',6240013,27),(465,'2022-11-18',6240014,28),(466,'2022-11-18',6240015,27),(467,'2022-11-18',6240016,28),(468,'2022-11-18',6240017,27),(469,'2022-11-18',6240018,28),(470,'2022-11-21',6240019,29),(471,'2022-11-21',6240021,30),(472,'2022-11-21',6240022,29),(473,'2022-11-21',6240023,30),(474,'2022-11-21',6240024,29),(475,'2022-11-21',6240025,30),(476,'2022-11-21',6240026,29),(477,'2022-11-21',6240027,30),(478,'2022-11-21',6240029,29),(479,'2022-11-21',6240031,30),(480,'2022-11-21',6240032,29),(481,'2022-11-21',6240033,30),(482,'2022-11-21',6240034,29),(483,'2022-11-21',6240035,30),(484,'2022-11-21',6240036,29),(485,'2022-11-21',6240038,30),(486,'2022-11-21',6240039,29),(487,'2022-11-21',6240040,30),(488,'2022-11-21',6240041,29),(489,'2022-11-21',6240042,30),(490,'2022-11-21',6240044,29),(491,'2022-11-21',6240045,30),(492,'2022-11-21',6240046,29),(493,'2022-11-21',6240047,30),(494,'2022-11-21',6240048,29),(495,'2022-11-21',6240049,30),(496,'2022-11-21',6240050,29),(497,'2022-11-21',6240001,30),(498,'2022-11-21',6240002,29),(499,'2022-11-21',6240003,30),(500,'2022-11-21',6240005,29),(501,'2022-11-21',6240007,30),(502,'2022-11-22',6240008,31),(503,'2022-11-22',6240009,32),(504,'2022-11-22',6240010,31),(505,'2022-11-22',6240012,32),(506,'2022-11-22',6240013,31),(507,'2022-11-22',6240014,32),(508,'2022-11-22',6240016,31),(509,'2022-11-22',6240017,32),(510,'2022-11-22',6240019,31),(511,'2022-11-22',6240020,32),(512,'2022-11-22',6240021,31),(513,'2022-11-22',6240022,32),(514,'2022-11-22',6240023,31),(515,'2022-11-22',6240025,32),(516,'2022-11-22',6240026,31),(517,'2022-11-22',6240027,32),(518,'2022-11-22',6240029,31),(519,'2022-11-22',6240030,32),(520,'2022-11-22',6240031,31),(521,'2022-11-22',6240032,32),(522,'2022-11-22',6240033,31),(523,'2022-11-22',6240035,32),(524,'2022-11-22',6240036,31),(525,'2022-11-22',6240037,32),(526,'2022-11-22',6240038,31),(527,'2022-11-22',6240041,32),(528,'2022-11-22',6240042,31),(529,'2022-11-22',6240044,32),(530,'2022-11-22',6240045,31),(531,'2022-11-22',6240046,32),(532,'2022-11-23',6240047,33),(533,'2022-11-23',6240048,34),(534,'2022-11-23',6240049,33),(535,'2022-11-23',6240050,34),(536,'2022-11-23',6240001,33),(537,'2022-11-23',6240002,34),(538,'2022-11-23',6240003,33),(539,'2022-11-23',6240004,34),(540,'2022-11-23',6240005,33),(541,'2022-11-23',6240007,34),(542,'2022-11-23',6240008,33),(543,'2022-11-23',6240009,34),(544,'2022-11-23',6240011,33),(545,'2022-11-23',6240012,34),(546,'2022-11-23',6240013,33),(547,'2022-11-23',6240014,34),(548,'2022-11-23',6240015,33),(549,'2022-11-23',6240016,34),(550,'2022-11-23',6240017,33),(551,'2022-11-23',6240019,34),(552,'2022-11-23',6240020,33),(553,'2022-11-23',6240022,34),(554,'2022-11-23',6240023,33),(555,'2022-11-23',6240024,34),(556,'2022-11-23',6240025,33),(557,'2022-11-23',6240026,34),(558,'2022-11-23',6240028,33),(559,'2022-11-23',6240029,34),(560,'2022-11-23',6240030,33),(561,'2022-11-23',6240031,34),(562,'2022-11-23',6240032,33),(563,'2022-11-23',6240033,34),(564,'2022-11-23',6240035,33),(565,'2022-11-23',6240036,34),(566,'2022-11-23',6240037,33),(567,'2022-11-23',6240038,34),(568,'2022-11-23',6240039,33),(569,'2022-11-23',6240040,34),(570,'2022-11-23',6240041,33),(571,'2022-11-23',6240042,34),(572,'2022-11-23',6240043,33),(573,'2022-11-23',6240044,34),(574,'2022-11-24',6240045,35),(575,'2022-11-24',6240047,36),(576,'2022-11-24',6240048,35),(577,'2022-11-24',6240001,36),(578,'2022-11-24',6240002,35),(579,'2022-11-24',6240003,36),(580,'2022-11-24',6240004,35),(581,'2022-11-24',6240005,36),(582,'2022-11-24',6240006,35),(583,'2022-11-24',6240007,36),(584,'2022-11-24',6240008,35),(585,'2022-11-24',6240009,36),(586,'2022-11-24',6240010,35),(587,'2022-11-24',6240012,36),(588,'2022-11-24',6240013,35),(589,'2022-11-24',6240014,36),(590,'2022-11-24',6240015,35),(591,'2022-11-24',6240016,36),(592,'2022-11-24',6240017,35),(593,'2022-11-24',6240018,36),(594,'2022-11-24',6240019,35),(595,'2022-11-24',6240021,36),(596,'2022-11-24',6240022,35),(597,'2022-11-25',6240023,37),(598,'2022-11-25',6240024,38),(599,'2022-11-25',6240025,37),(600,'2022-11-25',6240026,38),(601,'2022-11-25',6240027,37),(602,'2022-11-25',6240029,38),(603,'2022-11-25',6240031,37),(604,'2022-11-25',6240032,38),(605,'2022-11-25',6240033,37),(606,'2022-11-25',6240034,38),(607,'2022-11-25',6240035,37),(608,'2022-11-25',6240036,38),(609,'2022-11-25',6240038,37),(610,'2022-11-25',6240039,38),(611,'2022-11-25',6240040,37),(612,'2022-11-25',6240041,38),(613,'2022-11-25',6240042,37),(614,'2022-11-25',6240044,38),(615,'2022-11-25',6240045,37),(616,'2022-11-25',6240046,38),(617,'2022-11-25',6240047,37),(618,'2022-11-25',6240048,38),(619,'2022-11-25',6240049,37),(620,'2022-11-25',6240050,38),(621,'2022-11-25',6240001,37),(622,'2022-11-25',6240002,38),(623,'2022-11-25',6240003,37),(624,'2022-11-25',6240005,38),(625,'2022-11-25',6240007,37),(626,'2022-11-25',6240008,38),(627,'2022-11-25',6240009,37),(628,'2022-11-25',6240010,38),(629,'2022-11-25',6240012,37),(630,'2022-11-25',6240013,38),(631,'2022-11-25',6240014,37),(632,'2022-11-25',6240016,38),(633,'2022-11-28',6240017,39),(634,'2022-11-28',6240019,40),(635,'2022-11-28',6240020,39),(636,'2022-11-28',6240021,40),(637,'2022-11-28',6240022,39),(638,'2022-11-28',6240023,40),(639,'2022-11-28',6240025,39),(640,'2022-11-28',6240026,40),(641,'2022-11-28',6240027,39),(642,'2022-11-28',6240029,40),(643,'2022-11-28',6240030,39),(644,'2022-11-28',6240031,40),(645,'2022-11-28',6240032,39),(646,'2022-11-28',6240033,40),(647,'2022-11-28',6240035,39),(648,'2022-11-28',6240036,40),(649,'2022-11-28',6240037,39),(650,'2022-11-28',6240038,40),(651,'2022-11-28',6240041,39),(652,'2022-11-28',6240042,40),(653,'2022-11-28',6240044,39),(654,'2022-11-28',6240045,40),(655,'2022-11-28',6240046,39),(656,'2022-11-28',6240047,40),(657,'2022-11-28',6240048,39),(658,'2022-11-28',6240049,40),(659,'2022-11-28',6240050,39),(660,'2022-11-28',6240001,40),(661,'2022-11-28',6240002,39),(662,'2022-11-28',6240003,40),(663,'2022-11-28',6240004,39),(664,'2022-11-28',6240005,40),(665,'2022-11-28',6240007,39),(666,'2022-11-28',6240008,40),(667,'2022-11-28',6240009,39),(668,'2022-11-28',6240011,40),(669,'2022-11-29',6240012,41),(670,'2022-11-29',6240013,42),(671,'2022-11-29',6240014,41),(672,'2022-11-29',6240015,42),(673,'2022-11-29',6240016,41),(674,'2022-11-29',6240017,42),(675,'2022-11-29',6240019,41),(676,'2022-11-29',6240020,42),(677,'2022-11-29',6240022,41),(678,'2022-11-29',6240023,42),(679,'2022-11-29',6240024,41),(680,'2022-11-29',6240025,42),(681,'2022-11-29',6240026,41),(682,'2022-11-29',6240028,42),(683,'2022-11-29',6240029,41),(684,'2022-11-29',6240030,42),(685,'2022-11-29',6240031,41),(686,'2022-11-29',6240032,42),(687,'2022-11-29',6240033,41),(688,'2022-11-29',6240035,42),(689,'2022-11-29',6240036,41),(690,'2022-11-29',6240037,42),(691,'2022-11-29',6240038,41),(692,'2022-11-29',6240039,42),(693,'2022-11-29',6240040,41),(694,'2022-11-29',6240041,42),(695,'2022-11-29',6240042,41),(696,'2022-11-29',6240043,42),(697,'2022-11-29',6240044,41),(698,'2022-11-29',6240045,42),(699,'2022-11-29',6240047,41),(700,'2022-11-29',6240048,42),(701,'2022-11-29',6240001,41),(702,'2022-11-29',6240002,42),(703,'2022-11-29',6240003,41),(704,'2022-11-29',6240004,42),(705,'2022-11-29',6240005,41),(706,'2022-11-29',6240006,42),(707,'2022-11-29',6240007,41),(708,'2022-11-29',6240008,42),(709,'2022-11-29',6240009,41),(710,'2022-11-29',6240010,42),(711,'2022-11-29',6240012,41),(712,'2022-11-29',6240013,42),(713,'2022-11-29',6240014,41),(714,'2022-11-29',6240015,42),(715,'2022-11-29',6240016,41),(716,'2022-11-29',6240017,42),(717,'2022-11-30',6240018,43),(718,'2022-11-30',6240019,44),(719,'2022-11-30',6240021,43),(720,'2022-11-30',6240022,44),(721,'2022-11-30',6240023,43),(722,'2022-11-30',6240024,44),(723,'2022-11-30',6240025,43),(724,'2022-11-30',6240026,44),(725,'2022-11-30',6240027,43),(726,'2022-11-30',6240029,44),(727,'2022-11-30',6240031,43),(728,'2022-11-30',6240032,44),(729,'2022-11-30',6240033,43),(730,'2022-11-30',6240034,44),(731,'2022-11-30',6240035,43),(732,'2022-11-30',6240036,44),(733,'2022-11-30',6240038,43),(734,'2022-11-30',6240039,44),(735,'2022-11-30',6240040,43),(736,'2022-11-30',6240041,44),(737,'2022-11-30',6240042,43),(738,'2022-11-30',6240044,44),(739,'2022-11-30',6240045,43),(740,'2022-11-30',6240046,44),(741,'2022-11-30',6240047,43),(742,'2022-11-30',6240048,44),(743,'2022-11-30',6240049,43),(744,'2022-11-30',6240050,44),(745,'2022-12-01',6240001,45),(746,'2022-12-01',6240002,46),(747,'2022-12-01',6240003,45),(748,'2022-12-01',6240005,46),(749,'2022-12-01',6240007,45),(750,'2022-12-01',6240008,46),(751,'2022-12-01',6240009,45),(752,'2022-12-01',6240010,46),(753,'2022-12-01',6240012,45),(754,'2022-12-01',6240013,46),(755,'2022-12-01',6240014,45),(756,'2022-12-01',6240016,46),(757,'2022-12-01',6240017,45),(758,'2022-12-01',6240019,46),(759,'2022-12-01',6240020,45),(760,'2022-12-01',6240021,46),(761,'2022-12-01',6240022,45),(762,'2022-12-01',6240023,46),(763,'2022-12-01',6240025,45),(764,'2022-12-01',6240026,46),(765,'2022-12-01',6240027,45),(766,'2022-12-01',6240029,46),(767,'2022-12-01',6240030,45),(768,'2022-12-01',6240031,46),(769,'2022-12-01',6240032,45),(770,'2022-12-01',6240033,46),(771,'2022-12-01',6240035,45),(772,'2022-12-01',6240036,46),(773,'2022-12-01',6240037,45),(774,'2022-12-01',6240038,46),(775,'2022-12-01',6240041,45),(776,'2022-12-01',6240042,46),(777,'2022-12-01',6240044,45),(778,'2022-12-01',6240045,46),(779,'2022-12-01',6240046,45),(780,'2022-12-02',6240047,47),(781,'2022-12-02',6240048,48),(782,'2022-12-02',6240049,47),(783,'2022-12-02',6240050,48),(784,'2022-12-02',6240001,47),(785,'2022-12-02',6240002,48),(786,'2022-12-02',6240003,47),(787,'2022-12-02',6240004,48),(788,'2022-12-02',6240005,47),(789,'2022-12-02',6240007,48),(790,'2022-12-02',6240008,47),(791,'2022-12-02',6240009,48),(792,'2022-12-02',6240011,47),(793,'2022-12-02',6240012,48),(794,'2022-12-02',6240013,47),(795,'2022-12-02',6240014,48),(796,'2022-12-02',6240015,47),(797,'2022-12-02',6240016,48),(798,'2022-12-02',6240017,47),(799,'2022-12-02',6240019,48),(800,'2022-12-02',6240020,47),(801,'2022-12-02',6240022,48),(802,'2022-12-02',6240023,47),(803,'2022-12-02',6240024,48),(804,'2022-12-02',6240025,47),(805,'2022-12-02',6240026,48),(806,'2022-12-02',6240028,47),(807,'2022-12-02',6240029,48),(808,'2022-12-02',6240030,47),(809,'2022-12-02',6240031,48),(810,'2022-12-02',6240032,47),(811,'2022-12-02',6240033,48),(812,'2022-12-02',6240035,47),(813,'2022-12-03',6240036,49),(814,'2022-12-03',6240037,50),(815,'2022-12-03',6240038,49),(816,'2022-12-03',6240039,50),(817,'2022-12-03',6240040,49),(818,'2022-12-03',6240041,50),(819,'2022-12-03',6240042,49),(820,'2022-12-03',6240043,50),(821,'2022-12-03',6240044,49),(822,'2022-12-03',6240045,50),(823,'2022-12-03',6240047,49),(824,'2022-12-03',6240048,50),(825,'2022-12-03',6240001,49),(826,'2022-12-03',6240002,50),(827,'2022-12-03',6240003,49),(828,'2022-12-03',6240004,50),(829,'2022-12-03',6240005,49),(830,'2022-12-03',6240006,50),(831,'2022-12-03',6240007,49),(832,'2022-12-03',6240008,50),(833,'2022-12-03',6240009,49),(834,'2022-12-03',6240010,50),(835,'2022-12-03',6240012,49),(836,'2022-12-03',6240013,50),(837,'2022-12-03',6240014,49),(838,'2022-12-03',6240015,50),(839,'2022-12-03',6240016,49),(840,'2022-12-03',6240017,50),(841,'2022-12-03',6240018,49),(842,'2022-12-03',6240019,50),(843,'2022-12-03',6240021,49),(844,'2022-12-03',6240022,50),(845,'2022-12-03',6240035,49),(846,'2022-12-03',6240036,50),(847,'2022-12-03',6240045,49),(848,'2022-12-03',6240046,50),(849,'2022-12-03',6240047,49),(850,'2022-12-03',6240048,50),(851,'2022-12-03',6240049,49),(852,'2022-12-03',6240050,50);", "UNLOCK TABLES;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 

 ########################################## 게시판 테이블  생성, 데이터 추가 ########################################

sql = ["DROP TABLE IF EXISTS `review_board`;", "CREATE TABLE `review_board` (  `no` int NOT NULL AUTO_INCREMENT,  `date` date NOT NULL,  `employee_num` int NOT NULL,  `title` varchar(30) NOT NULL,  `content` varchar(100) NOT NULL,  `password` varchar(30),  PRIMARY KEY (`no`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;", "LOCK TABLES `review_board` WRITE;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 

sql = ["INSERT INTO `review_board` VALUES (1,'2022-11-01',6240022,'양','양 많아서 좋아요~!','3434'),(2,'2022-11-02',6240009,'오늘 메뉴','함박스테이크 소스 넘 맛있음!!','5678'),(3,'2022-11-02',6240015,'음식 간','국 간이 조금 짰어요ㅠㅜ','9090'),(4,'2022-11-03',6240004,'최고!!','철판김치치즈볶음밥 너무 맛있었어요~!','1122');", "UNLOCK TABLES;"]

for s in sql:
    cursor.execute(s)
    result = cursor.fetchall()

for r in result:
    print(r) 
    
    
#######################구현 중 함수######################

def load_list():  # 식단테이블 불러오기, menu_list 리스트에 담음
    menu_list = []
     
    sql = "SELECT * FROM cafeteria"
    cursor.execute(sql)
    rows = cursor.fetchall()
    
    for i in rows:
        menu_list.append(list(i))
        
    print("menu_list")
    print(menu_list)
    
    return menu_list

def load_employee_list():  # 회원테이블 불러오기, employee_list 리스트에 담음
    employee_list = []

    sql = "SELECT * FROM employee"
    cursor.execute(sql)
    rows = cursor.fetchall()
    
    for i in rows:
        employee_list.append(list(i))
        
    print("employee_list")
    print(employee_list)
    
    return employee_list

def load_today_list():  # 오늘 식단 불러오기, today_list 리스트에 담음
    today_list = []

    print(dt_now)
    
    sql = "SELECT * FROM cafeteria WHERE date = \'2022-12-03\';" ############오늘날짜가 나오게끔 해야함##############
    print(sql)
    cursor.execute(sql)
    #cursor.execute(sql, (dt_now))
    
    rows = cursor.fetchall()
    
    for i in rows:
        today_list.append(list(i))
    
    print("today_list")
    print(today_list)
    
    return today_list

def load_expense_list(employee_num): #회원별 총 지출금액 
    li = []
    sql = "SELECT COUNT(menu_num) FROM order_menu WHERE employee_num=%s"   #사원 1명의 주문 수량 
    cursor.execute(sql,(employee_num)) 
    rows = cursor.fetchall()
    
    for i in rows:
        li.append(list(i))
    
    cnt = int(li[0][0])
    
    return cnt * 7000 #주문수량 * 7000 = 총 지출금액

def load_sales_list(month): #선택한 달의 1일부터 ~막일까지 판매 수량 
    li = []

    for i in range(1, 31):
        sql = "SELECT COUNT(menu_num) FROM order_menu WHERE DATE = \"2022-%s-%s\""
        cursor.execute(sql,(month, i)) 
        rows = cursor.fetchall()
    
        for j in rows:
            li.append(list(j))
        
    print("li")
    print(li)
    
    return li #주문수량 * 7000 = 총 지출금액

def load_remaining_qty():  # 남은 수량 계산 
    menu_num_list = [] #오늘날짜의 식단 메뉴 넘버(menu_num)
    order_num1 = []
    order_num2 = []
    order_num_list = []
    menu_qty_list = []
    menu_qty_list2 = []
    remaining_qty = []
    
    #오늘날짜의 메뉴 번호를 구해옴 
    sql = "SELECT menu_num FROM cafeteria WHERE date = \'2022-12-03\';"
    cursor.execute(sql)
    #cursor.execute(sql, (dt_now))
    rows = cursor.fetchall()
    for i in rows:
        menu_num_list.append(list(i))
              
    print("menu_num_list")
    print(menu_num_list)
    
    #첫번째 메뉴 주문 수량 
    sql = "SELECT COUNT(menu_num) FROM order_menu WHERE menu_num=%s"   
    cursor.execute(sql,(menu_num_list[0][0])) 
    con.commit()   
    rows = cursor.fetchall()
    for i in rows:
        order_num1.append(list(i))  
        
    #두번째 메뉴 주문 수량 
    sql = "SELECT COUNT(menu_num) FROM order_menu WHERE menu_num=%s"   
    cursor.execute(sql,(menu_num_list[1][0])) 
    con.commit()   
    rows = cursor.fetchall()
    for i in rows:
        order_num2.append(list(i))  
    
    #메뉴 주문 수량을 int로 변환해서 리스트 저장 
    order_num_list = [int(order_num1[0][0]), int(order_num2[0][0])] #int 변환 
    print(order_num_list)
    
    #메뉴 전체 수량을 가져옴  
    sql = "SELECT menu_qty FROM cafeteria WHERE date = \"2022-11-01\";"
    cursor.execute(sql)
    rows = cursor.fetchall()
    for i in rows:
        menu_qty_list.append(list(i))
    
    
    #메뉴 전체 수량을 int로 변환 
    menu_qty_list2 = [int(menu_qty_list[0][0]), int(menu_qty_list[1][0])] #int 변환 
    
    print("menu_qty_list2")
    print(menu_qty_list2)
    
    #남은 수량 계산 = 전체수량에서 주문수량을 빼기 
    remaining_qty = [(menu_qty_list2[0] - order_num_list[0]), (menu_qty_list2[1] - order_num_list[1])]
    print("remaining_qty")
    print(remaining_qty)
    
    return remaining_qty


def load_board_list():  # 게시판 불러오기
    board_list = []
     
    sql = "SELECT * FROM review_board"
    cursor.execute(sql)
    rows = cursor.fetchall()
    
    for i in rows:
        board_list.append(list(i))
        
    print("board_list")
    print(board_list)
    
    return board_list


#수정중 
# cafeteria 테이블에 식단 추가 
def save(date, main_menu, menu1, menu2, menu3, menu4, menu5, menu_price, menu_qty): # 식단 등록 + 사진보이게,,,,,,, 
    sql = "INSERT INTO cafeteria(date, main_menu, menu1, menu2, menu3, menu4, menu5, menu_price, menu_qty)  VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)"
    cursor.execute(sql, (date, main_menu, menu1, menu2, menu3, menu4, menu5, menu_price, menu_qty))
    con.commit()
    
        
    return None #메뉴 번호를 리턴 

# employee 테이블에 사원 추가 
def save_employee(employee_num, employee_name, department): 
    sql = "INSERT INTO employee(employee_num, employee_name, department) VALUES (%s, %s, %s)"
    cursor.execute(sql, (employee_num, employee_name, department))
    con.commit()
    return None

# review_board 테이블에 게시글 추가 
def save_board(employee_num, title, content, password):
    sql = "INSERT INTO review_board(date, employee_num, title, content, password) VALUES (%s, %s, %s, %s, %s)"
    cursor.execute(sql, (dt_now, employee_num, title, content, password))
    
    con.commit()
    return None


def order_menu(employee_num, menu_chk0, menu_chk1): # 주문
    if menu_chk0 != None: #체크박스 value = 메뉴 번호
        sql = "INSERT INTO order_menu(date, employee_num, menu_num) VALUES (%s, %s, %s)"
        cursor.execute(sql, (dt_now, employee_num, menu_chk0) )
        con.commit()
    
    elif menu_chk1 != None:
        sql = "INSERT INTO order_menu(date, employee_num, menu_num) VALUES (%s, %s, %s)"
        cursor.execute(sql, (dt_now, employee_num, menu_chk1) )
        con.commit()
    # 오늘 식단을 조회 SQL, 받아온 menu_num과 같은 경우, 준비식수를 줄어들게 한다. 
    
    return None




def now_index():
    sql = "SELECT COUNT(menu_num) FROM cafeteria;"
    menu_qty_list = [];
    cursor.execute(sql)
    rows = cursor.fetchall()
    for i in rows:
        menu_qty_list.append(list(i))
    
    
    return menu_qty_list[0][0] #현재 인덱스 


def load_house(idx): 
    df = pd.read_csv("database.csv")
    house_info = df.iloc[idx]
    
    #DB연계 
    #house_list 이용??,,,, 
    #print("house_info 보기")
    print(house_info)
    return house_info


if __name__ =="__main__":
    load_list()